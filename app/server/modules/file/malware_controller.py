from app.server.utils import read_config_from_yaml
from app.server.modules.file.malware import Malware
from app.server.game_functions import FILE_HASH_MALWARE_MAPPING

import glob
import random

def load_malware_obj_from_yaml(malware_name) -> Malware:
    """
    Given a malware name, look for a malware config yaml file with that corresponding name
    Use the malware config to build a Malware obj
    return the Malware object
    """
    malware_config = glob.glob(f"app/game_configs/malware/{malware_name}.yaml")[0]
    # Read all malware configs from YAML config files
    malware_config_as_json = read_config_from_yaml(malware_config)
    if malware_config_as_json:
        return Malware(
                    **malware_config_as_json
                )
    else:
        return None

def get_hash(malware_name: str)->str:
    """
    Return a hash from the global file_hash_malware_mapping
    that is a assigned to this malware family
    """
    # return a hash value based on self.name
    return random.choice(
        FILE_HASH_MALWARE_MAPPING.get(malware_name, "no_hash_available")
    )