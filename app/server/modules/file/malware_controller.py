from time import time
from app.server.modules.endpoints.file_creation_event import FileCreationEvent, File
from app.server.modules.endpoints.endpoint_controller import upload_file_creation_event_to_azure
from app.server.modules.file.malware import Malware

def get_malware_by_name(malware_name: str) -> Malware:
    """
    Iterate through all malware objects and return the one with the correct name
    """
    from app.server.game_functions import MALWARE_OBJECTS

    try:
        print(MALWARE_OBJECTS)
        return [malware for malware in MALWARE_OBJECTS if malware.name==malware_name][0]
    except:
        raise Exception(f"Malware name {malware_name} does not exist! Check the config!")


def write_file_to_host(hostname: str, timestamp: float, file: File) -> None:
    """
    Uploads a FileCreationEvent for a given host, time, and File
    """
    upload_file_creation_event_to_azure(
        FileCreationEvent(
            hostname=hostname,
            timestamp=timestamp,
            filename=file.filename,
            path=file.path,
            sha256=file.sha256,
            size=file.size
        )
    )

# def get_malware_hash(malware: Malware)->str:
#     """
#     Return a hash from the global file_hash_malware_mapping
#     that is a assigned to this malware family
#     """
#     # return a hash value based on self.name
#     return random.choice(
#         FILE_HASH_MALWARE_MAPPING.get(malware.name, "no_hash_available")
#     )

# def get_actor_malware_hash(actor: Actor)->str:
#     """
#     Take an actor object
#     Return a hash from any of its malware families
#     """
#     malware = random.choice(actor.get_malware())
#     return get_malware_hash(malware)

