
import random 
from app.server.modules.endpoints.processes import Process

class Malware:
    """
    A class to model malware
    """
    def __init__(self, name:str, filenames:list, paths:list, recon_processes:list, c2_processes:list, c2_ips:list) -> None:
        self.name = name
        self.filenames = filenames
        self.paths = paths
        self.files = []
        self.recon_processes = []
        self.c2_processes = []
        self.c2_ips = c2_ips
        
        self.set_recon_processes(recon_processes)
        self.set_c2_processes(c2_processes)

    def get_ip(self):
        """
        Get a random IP for list of malware IPs
        """
        return random.choice(self.c2_ips)

    def set_recon_processes(self, processes:"list[dict]") -> None:
        """
        Take a list of recon process names
        set the corresponding File object to the file variable
        """
        for process in processes:
            self.recon_processes.append(
                Malware.get_process_obj(process)
            )

    def set_c2_processes(self, processes:"list[dict]") -> None:
        """
        Take a list of recon process names
        set the corresponding File object to the file variable
        """
        for process in processes:
            self.c2_processes.append(
                Malware.get_process_obj(process)
            )


    @staticmethod
    def get_process_obj(process) -> Process:
        """
        Take a process dict and load the corresponding
        Process object
        """
        process_args = process.get("process", None).replace("{c2_ip}", self.get_ip())
        return Process(
            process_name=process.get("name"),
            process_arguments=process_args
        )
        

    def __repr__(self) -> str:
        return f"<Malware: {self.name}>"
