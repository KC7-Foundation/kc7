# from app.server.modules.file.file import File  ## TODO: define thid
from app.server.modules.endpoints.processes import Process

class Malware:
    """
    A class to model malware
    """
    def __init__(self, name:str, filenames:list, paths:list, recon_processes:list, c2_processes:list) -> None:
        self.name = name
        self.filenames = filenames
        self.paths = paths
        self.files = []
        self.recon_processes = []
        self.c2_processes = []
        
        self.set_recon_processes(recon_processes)
        self.set_c2_processes(c2_processes)
        self.set_files(filenames)


    def set_files(self) -> "list":
        """
        Take a list of files and load the corresponding file objects
        """
        pass


    def set_recon_processes(self, processes:"list[dict]") -> None:
        """
        Take a list of recon process names
        set the corresponding File object to the file variable
        """
        for process in processes:
            self.recon_processes.append(
                Malware.get_process_obj(process)
            )


    def set_c2_processes(self, processes:"list[dict]") -> None:
        """
        Take a list of recon process names
        set the corresponding File object to the file variable
        """
        for process in processes:
            self.c2_processes.append(
                Malware.get_process_obj(process)
            )


    @staticmethod
    def get_process_obj(process) -> Process:
        """
        Take a process dict and load the corresponding
        Process object
        """
        return Process(
            process_name=process.get("name"),
            process_arguments=process.get("process", None)
        )
        