
import random 
from app.server.modules.endpoints.processes import Process
from app.server.modules.endpoints.file_creation_event import File

class Malware:
    """
    A class to model malware
    """
    def __init__(self, name:str, filenames:list, paths:list, recon_processes:list[dict], c2_processes:list[dict]) -> None:
        self.name = name
        self.filenames = filenames
        self.paths = paths
        self.recon_processes = []
        self.c2_processes = []

        self.set_recon_processes(recon_processes)
        self.set_c2_processes(c2_processes)

        self.hashes = []
        # self.c2_ips = c2_ips

    def get_ip(self):
        """
        Get a random IP for list of malware IPs
        """
        return random.choice(self.c2_ips)

    def set_recon_processes(self, processes:"list[dict]") -> None:
        """
        Take a list of recon process names
        set the corresponding File object to the file variable
        """
        for process in processes:
            self.recon_processes.append(
                Malware.get_process_obj(process)
            )

    def set_c2_processes(self, processes:"list[dict]") -> None:
        """
        Take a list of recon process names
        set the corresponding File object to the file variable
        """
        for process in processes:
            self.c2_processes.append(
                Malware.get_process_obj(process)
            )

    def get_implant(self) -> File:
        """
        Returns a file from the malware family
        """
        filename = random.choice(self.filenames)
        return File(
            filename=filename,
            path=random.choice(self.paths)+filename,
            sha256=random.choice(self.hashes)
        )
        
    @staticmethod
    def get_process_obj(process: dict) -> Process:
        """
        Take a process dict and load the corresponding
        Process object
        """
        print("TYPE OF PROCESS!!! "+str(type(process)))
        process_args = process.get("process", None)
        return Process(
            process_name=process.get("name"),
            process_arguments=process_args
        )
        

    def __repr__(self) -> str:
        return f"""<Malware: {self.name}>
        Hashes: {self.hashes}
        FileNames: {self.filenames}"""
